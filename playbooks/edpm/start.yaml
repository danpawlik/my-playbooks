---
- hosts: microshift.dev
  vars:
    pv_storageclass: crc-csi-hostpath-provisioner
    overwrite_container_policy: true
    setup_olm: true
    standard_user: {}
    delete_openshift_storage: false
    pv_count:
      start: 1
      end: 12
    pre_pull_images:
      - registry.redhat.io/rhosp-rhel9/openstack-rabbitmq:17.0
  tasks:
    - name: Fail when openshift_pull_sec not provided
      fail:
        msg: "The openshift_pull_secret variable can not be empty!"
      when: crc_secret.openshift_pull_secret == ""

    - name: Clone repos in the job workspace
      include_role:
        name: prepare-workspace

    # Fom sf-infra/roles/extra/microshift
    - name: Set facts
      set_fact:
        openshift_pull_secret: "{{ crc_secret.openshift_pull_secret }}"
      no_log: true

    - name: Prepare environment
      include_tasks: pre.yaml

    - name: Setup Microshift
      block:
        - name: Start Microshift deployment
          include_role:
            name: ansible-microshift-role

        # NOTE: The topolvm requires additional volume and create a lvm
        # on that volume. We don't use that for CI, so just skip it.
        - name: Create script to verify deployment
          copy:
            content: |
              for i in {1..20}; do
                echo "Ensuring that containers are spawned... ${i}"
                count=$(/usr/local/bin/oc get pods --all-namespaces | grep openshift | grep -viE 'topolvm|running' -c)
                if [ "$count" -eq "0" ]; then
                    echo "Microshift is deployed, we can continue..."
                    break
                else
                    echo "The Microshift containers are not ready..."
                    sleep 15
                fi
              done
              echo "Skipping waiting for openshift-storage - topolvm"
            dest: /tmp/pull-images.sh
            mode: "0755"

        - name: Check if all containers are up and ready
          shell: /tmp/pull-images.sh

        - name: Setup Dnsmasq
          include_tasks: dnsmasq.yaml
          when: setup_dnsmasq | default(true)

        - name: Configure OpenStack operator
          include_tasks: openstack.yaml

        - name: Setup deplo_podified_ctlplane
          include_tasks: deploy_podified_ctlplane.yaml

        - name: Start Openstack deployment
          include_tasks: post.yaml
      always:
        - name: Remove sensitive data
          include_role:
            name: ansible-microshift-role
            tasks_from: cleanup.yaml
