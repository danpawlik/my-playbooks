---
# This playbook deploy crc and prepare VM to make a snapshot, that later
# can be deployed in CI.
- hosts: crc.dev
  vars:
    crc_debug: true
    nested_virtualization: true
  pre_tasks:
    - name: Update packages
      become: true
      package:
        name: '*'
        state: latest

    - name: Ensure CentOS runs with selinux permissive
      become: true
      selinux:
        policy: targeted
        state: permissive

    - name: Enable nested virtualization
      block:
        - name: Install packages
          become: true
          yum:
            name:
              - qemu-kvm-common
            state: present
        - name: Check if CPU vendor is Intel
          shell: |
            grep -qi intel /proc/cpuinfo
          ignore_errors: true
          register: _intel_vendor

        - name: Enable nested virtualization - Intel
          become: true
          lineinfile:
            path: /etc/modprobe.d/kvm.conf
            regexp: '^#options kvm_intel nested=1'
            line: 'options kvm_intel nested=1'
          when: _intel_vendor.rc == 0
          register: _nested_intel

        - name: Enable nested virtualization - AMD
          become: true
          lineinfile:
            path: /etc/modprobe.d/kvm.conf
            regexp: '^#options kvm_amd nested=1'
            line: 'options kvm_amd nested=1'
          when: _intel_vendor.rc == 1
          register: _nested_amd

        - name: Reboot host to apply nested virtualization change
          become: true
          reboot:
          when: _nested_intel.changed or _nested_amd.changed
      when: nested_virtualization | default(false)

    - name: Install packages
      become: true
      yum:
        name:
          - make
          - git
          - vim
          - golang
          - tar
          - ansible-core
          - skopeo
          - sqlite
          - jq
          - podman
        state: present
  roles:
    - extra/crc
  post_tasks:
    - name: Ensure cloud-init is installed
      become: true
      package:
        name:
          - cloud-init
          - golang
        state: present
    - name: Cleanup dnf cache
      become: true
      shell: dnf clean all
    # dpawlik: for some reason, ssh local keys in /etc/ssh/ are not generated during start.
    - name: Create crontab entry to generate local ssh keys
      become: true
      copy:
        content: |
          @reboot root /usr/bin/ssh-keygen -A; systemctl start sshd
        dest: /etc/cron.d/ssh_gen
    - name: Set proper selinux label
      become: true
      shell: |
        /usr/bin/chcon system_u:object_r:system_cron_spool_t:s0 /etc/cron.d/ssh_gen
